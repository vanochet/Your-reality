[gd_scene load_steps=4 format=2]

[sub_resource type="Shader" id=1]
code = "shader_type spatial;
render_mode unshaded;

varying vec3 POS;
varying vec2 UVP;

float rand(float co){
    return fract(sin(dot(vec2(co, co), vec2(12.9898, 78.233))) * 43758.5453);
}

void vertex() {
	UVP = sign(UV - 0.5);
	VERTEX.x += cos(TIME+VERTEX.y) * length(UVP) * 0.01;
	POS = VERTEX.xyz;
}

void fragment() {
	vec2 UVT = UVP;
	UVT = UVP * 1.25;
	ALPHA = clamp(1.0 - pow(length(UVT), 2) - pow(pow(UVT.x, 4) * pow(UVT.y, 2), 0.15) + (0.2 - pow(pow(UVT.x, 4) * pow(UVT.y, 2), 0.15)), 0.0, 1.0);
	ALBEDO = vec3(1.0);
	
	if (length(UVP) > 0.8) {
		ALPHA = rand(UVP.x+UVP.y*UVP.x - mod(UVP.x+UVP.y*UVP.x, 0.01)) * (pow(length(UVP), 8) - 0.15) * (1.0 - pow(length(UVP), 4));
	}
	
	if (length(UVP) > 1.0) {
		ALPHA = 0.0;
	}
}
"

[sub_resource type="ShaderMaterial" id=2]
shader = SubResource( 1 )

[sub_resource type="QuadMesh" id=3]
material = SubResource( 2 )

[node name="Portal" type="MeshInstance"]
mesh = SubResource( 3 )
